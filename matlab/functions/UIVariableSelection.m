function [SaveFeatures, UseExamples, PenTest, DLTon] = UIVariableSelection(point)
    SaveFeatures = nan;
    UseExamples = nan;
    PenTest = nan;
    DLTon = nan;

    bkgColor = "#fdfdfd";

    cbFont = "bahnschrift";
    cbTxtColor = "#023f9e";
    cbFontWeight = 'bold';

    btFont = "bahnschrift";
    btColor = "#f56723";
    btTxtColor = "#fdfdfd";

    assert(point == "P1" || point == "P2", "Expected point to be P1 or P2, got "+point);

    screen = get(0, 'ScreenSize');
    screenWidth = screen(3);
    screenHeight = screen(4);
    centerX = screenWidth/2;
    centerY = screenHeight/2;

    UIWidth = 400;
    UIHeigth = 300;
    UICenterX = UIWidth/2;
    UICenterY = UIHeigth/2;

    % Create a UI figure
    fig = uifigure('Position', [centerX-(UIWidth/2) centerY-(UIHeigth/2) UIWidth UIHeigth], ...
                   'Name', 'Select mode', ...
                   'CloseRequestFcn', @(fig, event) closeRequestCallback, ...
                   'Color', bkgColor);

    function closeRequestCallback()
        delete(gcbf)
        return
    end

    if point == "P1"
        n = 2;
    else
        n = 4;
    end
    
    cbWidth = 300;
    cbHeight = 20;
    margin = 5;
    cbTotHeight = n*cbHeight + (n-1)*margin;

    posY = zeros(4);
    for i=1:n
        posY(i) = UICenterY + cbTotHeight - (i*cbHeight + (i-1)*margin);
    end
    % Create radio buttons in the group
    cbSF = uicheckbox(fig, ...
        'Text', 'Save features', ...
        'Position', [UICenterX-cbWidth/2 posY(1) cbWidth cbHeight], ...
        'Value', 0, ...
        'FontSize',20, ...
        'FontName', cbFont, ...
        'FontColor', cbTxtColor, ...
        'FontWeight', cbFontWeight);

    cbUE = uicheckbox(fig, ...
        'Text', 'Use precooked examples', ...
        'Position', [UICenterX-cbWidth/2 posY(2) cbWidth cbHeight], ...
        'Value', 1, ...
        'FontSize',20, ...
        'FontName', cbFont, ...
        'FontColor', cbTxtColor, ...
        'FontWeight', cbFontWeight);

    if point == "P2"
        cbPT = uicheckbox(fig, ...
            'Text', 'Pen testing', ...
            'Position', [UICenterX-cbWidth/2 posY(3) cbWidth cbHeight], ...
            'Value', 0, ...
            'FontSize',20, ...
            'FontName', cbFont, ...
            'FontColor', cbTxtColor, ...
            'FontWeight', cbFontWeight);
        
        cbDLT = uicheckbox(fig, ...
            'Text', 'Apply DLT', ...
            'Position', [UICenterX-cbWidth/2 posY(4) cbWidth cbHeight], ...
            'Value', 1, ...
            'FontSize',20, ...
            'FontName', cbFont, ...
            'FontColor', cbTxtColor, ...
            'FontWeight', cbFontWeight);
    else
        cbPT = nan;
        cbDLT = nan;
    end

    % Add a button to confirm selection
    OKWidth = 100;
    OKHeight = 30;
    btn = uibutton(fig, ...
        'Text', 'OK', ...
        'Position', [UICenterX-(OKWidth/2) 20 OKWidth OKHeight], ...
        'ButtonPushedFcn', @(btn,event) confirmSelection(cbSF, cbUE, cbPT, cbDLT, point), ...
        'FontName',btFont, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', btColor, ...
        'FontColor', btTxtColor);

    waitfor(fig)


    function confirmSelection(cbSF, cbUE, cbPT, cbDLT, point)
        SaveFeatures = cbSF.Value;
        UseExamples = cbUE.Value;
        if point == "P2"
            PenTest = cbPT.Value;
            DLTon = cbDLT.Value;
        end
        
        close(gcbf)
    end
end
